SubDir TOP ;

if $(NT) {
    actions GenerateC {
        type $(2:C) > $(1:C)
    }
} else {
    actions GenerateC {
        cat $(2:C) > $(1:C)
    }
}

actions lua GenerateH {
    --require 'osprocess'.sleep(2)
    local file = io.open([[$(2)]], 'rb')
    local buffer = file:read('*a')
    file:close()

    file = io.open([[$(1)]], 'wb')
    file:write(buffer)
    file:close()
}

local generated.c = [ C.GristFiles test : generated.c ] ;
GenerateC $(generated.c) : $(TOP)/template-c ;
Depends $(generated.c) : $(TOP)/template-c ;
MakeLocate $(generated.c) : $(TOP) ;
Clean clean : $(generated.c) ;

local generated.h = [ C.GristFiles test : generated.h ] ;
GenerateH $(generated.h) : $(TOP)/template-h ;
Depends $(generated.h) : $(TOP)/template-h ;
MakeLocate $(generated.h) : $(TOP) ;
Clean clean : $(generated.h) ;

Needs $(generated.c) : $(generated.h) ;

C.Application test : main.c $(generated.c) ;
