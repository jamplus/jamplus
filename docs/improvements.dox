/*! \page improvements Miscellaneous Improvements

This page is completely out of date.

- The number of active JamPlus jobs defaults to the \c NUMBER_OF_PROCESSORS environment variable on Windows.
- Changed ... text globally to *** to work better in the Visual Studio IDE.
- Improved ***patience*** lines are printed out after the first 100 and every subsequent 1000 files have been header scanned.  Previously, ***patience*** was printed out for every 1000 targets.  This change both reduces the number of ...patience... lines printed, and makes them more accurately reflect the work being done.
- Improved progress indication changes the "*** on nth target..." message to instead include the percentage complete and an estimated time to completion.
- Improved debug level help.
- Printing of the total time.
- Improved "compile" debug output.  With level 5 Jam debugging, a Jam rule execution trace is printed.  This extends the debugging output to include:
  - when a new rule is defined (with a special note when the new rule re-defines a pre-existing rule).
  - when a new actions is defined (with a special note when the new actions re-defines a pre-existing actions).
  - when an included Jamfile ends.

This makes it possible to write scripts that process Jam debugging output that look for potential errors, such as re-defining a rule or action that is part of Jambase.

- Environment variable to set number of jobs.  For multi-processor systems, the -j\<x\> command line option can provide significant build time savings.  JamPlus will read from the environment variable JAM_JOBS the default number of jobs to spawn.
- Multiprocess output is kept separate and displayed all at once when the process completes. This prevents interleaving of unrelated output from multiple concurrently running processes.

*/
