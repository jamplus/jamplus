/*! \mainpage JamPlus

<h2>Introduction</h2>
JamPlus is a very fast and powerful code and data build system built on the code base of the original Perforce version of Jam, a software build tool similar to <b>make</b>. It is regularly used to parallelize the builds of massive code or data sets.

JamPlus adds new features to Jam and integrates a number of patches from the Jamming mailing list and the Perforce Public Depot.

A sampling of the features in the JamPlus distribution follows:

- <b>Multiplatform:</b> Binaries can be easily bootstrapped for Windows, Linux, and Mac OS X.
- <b>Compiler support:</b> Out of box compiler support for Visual C++ 202x/201x/200x/6, GCC, Clang, and MinGW.
- <b>Platform targets:</b> Platform modules are provided for building for Windows, Linux, macOS, iOS, and Android targets. Additionally, an Xbox 360 console platform is provided as a sample. If the machine has iOS Build Environment for Windows installed (see http://www.pmbaty.com/iosbuildenv/), then iOS builds can be made on a Windows Boot Camp partition.
- <b>Workspace/Project Generator:</b> Output project files for the Visual Studio IDE, Xcode, and CodeBlocks.
- <b>Multiple Passes:</b> Run multiple internal passes, collecting unknown dependencies, and execute them in a future pass.
- <b>Network Cache:</b> Any to-be-built target can be retrieved from one or more shared network file caches of prebuilt targets.
- <b>Command-line Dependencies:</b> When the 'command line' of a target (not necessarily the real command line) changes, the target is rebuilt.
- <b>Powerful New Variable Expansion:</b> Convert between slash types, expand literal text, include or exclude list components, recursive file globs, and more.
- <b>Dependency (Header) Cache:</b> When dependency information is scanned, it is cached for the next build, offering a huge performance boost.
- <b>Batch Compilation:</b> JamPlus is able to batch files to tools that support it, such as the Visual C++ compiler.
- <b>Checksum support:</b> Enabled via a flag, and JamPlus will use the checksums of files to detect change instead of timestamps.


<h2>Contents</h2>

- \subpage quick_start gets you up and running quickly.
- \subpage examples shows various simple JamPlus build techniques.
- \subpage building shows how to build JamPlus.
- \subpage jamtoworkspace tells how to use JamToWorkspace to create Visual Studio and other IDE workspaces.
- \subpage usage shows the command-line features of JamPlus.
- \subpage jam_language shows the language features of JamPlus.
- \subpage language_variables shows how to use variables in the Jam language.
- \subpage builtin_rules shows the built-in rules of JamPlus.
- \subpage builtin_variables shows the built-in variables of JamPlus.
- \subpage dependency_cache gives information on how to speed builds and enable the md5 command lines and file cache.
- \subpage jambase_rules shows the list of rules available in the default <tt>Jambase.jam</tt>.
- \subpage modules lists the various Jam modules that ship with JamPlus.
- \subpage multiple_passes shows how you can add multiple passes to your JamPlus build.
- \subpage module_c_multiple_toolchain_support describes how JamPlus can execute builds across varied toolchains in the same execution.
- \subpage lua_support shows how Lua can communicate with JamPlus.
- \subpage file_cache goes in-depth about the JamPlus (network) file caching feature.
- \subpage checksum_builds discusses special considerations for enabling and using JamPlus' checksum-over-timestamp support.
- \subpage warnings_and_errors shows a list of the possible warnings and errors that can be reported by Jam.
- \subpage bugs
- \subpage improvements
- \subpage scripts lists the helper scripts that ship with JamPlus.
- \subpage changelog descriptions for released versions of JamPlus.



<h2>Authors</h2>

Jam's author is Christopher Seiwald (<a href="mailto:seiwald@perforce.com">seiwald@perforce.com</A>).  Documentation is provided by <A HREF="http://www.perforce.com">Perforce Software, Inc.</A>

JamPlus's primary maintainer is Joshua Jensen (<a href="mailto:jjensen@workspacewhiz.com">jjensen@workspacewhiz.com</a>).

<i>Note: Much of this documentation is taken verbatim from the jam.html file which ships with the Perforce Jam build.</i>

Patches come from the Jam mailing list and Perforce Public Depot, with the primary authors being Alen Ladavac, Craig McPheeters, and Matt Armstrong.

*/

