rule C.Toolchain.clang.emscripten.Detect {
    if ! $(EMSCRIPTEN_PATH) {
        local emcc ;
        if ! $(NT) {
            local PATHS =
                $(PATH)
                ;
            emcc = [ Glob $(PATHS) : emcc ] ;
        } else {
            local PATHS =
                $(EMSDK)/upstream/emscripten
                $(PATH)
                ;
            emcc = [ Glob $(PATHS) : emcc.bat ] ;
            if $(emcc) {
                EMSCRIPTEN_PATH = $(emcc:D) ;
            }
        }
    }

    local SUFEXE = .js ;
    C.Toolchain.clang.Setup $(EMSCRIPTEN_PATH) : .o $(SUFEXE) ;

    C.AR on $(C.COMPILER_SUITE_SYMBOL) = $(EMSCRIPTEN_PATH)/emar ;
    C.CC on $(C.COMPILER_SUITE_SYMBOL) = $(EMSCRIPTEN_PATH)/emcc ;
    C.C++ on $(C.COMPILER_SUITE_SYMBOL) = $(EMSCRIPTEN_PATH)/em++ ;
    C.LINK on $(C.COMPILER_SUITE_SYMBOL) = $(EMSCRIPTEN_PATH)/emcc ;
    C.RANLIB on $(C.COMPILER_SUITE_SYMBOL) = $(EMSCRIPTEN_PATH)/emranlib ;

    C.Toolchain.$(C.COMPILER_SUITE).emscripten-shared ;

    C._ApplicationFromObjects_CleanIntermediates on $(C.COMPILER_SUITE_SYMBOL) = C.emscripten._ApplicationFromObjects_CleanIntermediates ;
    C._ApplicationFromObjects_LinkFlags on $(C.COMPILER_SUITE_SYMBOL) = C.emscripten._ApplicationFromObjects_LinkFlags ;
    C._ApplicationFromObjects_Setup on $(C.COMPILER_SUITE_SYMBOL) = C.emscripten._ApplicationFromObjects_Setup ;

    return $(C.COMPILER) ;
}
