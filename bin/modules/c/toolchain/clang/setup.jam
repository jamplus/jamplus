rule C.Toolchain.clang.Setup COMPILER_BIN_PATH : SUFFIXES {
    COMPILER_BIN_PATH ?= "" ;

    C.COMPILER = clang ;
    C.COMPILER_SUITE = clang ;

    COMPILER_BIN_PATH on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH) ;

    local SUFOBJ = $(SUFFIXES[1]:E=.o) ;
    local SUFSHAREDLIB ;
    local SUFEXE ;
    local PREFIXLIB ;
    if $(NT) {
        SUFEXE = $(SUFFIXES[2]:E=.exe) ;
        SUFSHAREDLIB = $(SUFFIXES[3]:E=.dll) ;
    } else {
        SUFOBJ = $(SUFFIXES[1]:E=.o) ;
        SUFEXE = $(SUFFIXES[2]:E="") ;
        SUFSHAREDLIB = $(SUFFIXES[3]:E=.so) ;
        PREFIXLIB = lib ;
    }
    SUFEXE on $(C.COMPILER_SUITE_SYMBOL) = $(SUFEXE) ;
    SUFLIB on $(C.COMPILER_SUITE_SYMBOL) = .a ;
    SUFMODULE on $(C.COMPILER_SUITE_SYMBOL) = $(SUFSHAREDLIB) ;
    SUFLINKLIBS on $(C.COMPILER_SUITE_SYMBOL) = .a $(SUFSHAREDLIB) ;
    SUFOBJ on $(C.COMPILER_SUITE_SYMBOL) = $(SUFOBJ) ;
    SUFSHAREDLIB on $(C.COMPILER_SUITE_SYMBOL) = $(SUFSHAREDLIB) ;
    PREFIXLIB on $(C.COMPILER_SUITE_SYMBOL) = $(PREFIXLIB) ;

    NOARSCAN on $(C.COMPILER_SUITE_SYMBOL) = true ;
    NOARUPDATE on $(C.COMPILER_SUITE_SYMBOL) = true ;

    C.BUILD_EXTENSIONS on $(C.COMPILER_SUITE_SYMBOL) = $(SUFOBJ) ;
    C.AddBuildExtensions CC : .c .s : C.clang.CC : $(SUFOBJ) "" : 1 1 0 : 1 ;
    C.AddBuildExtensions C++ : .cc .cpp .cxx : C.clang.C++ : $(SUFOBJ) "" : 1 0 1 : 1 ;
    C.AddBuildExtensions M : .m : C.clang.CC : $(SUFOBJ) "" : 1 1 0 : 1 ;
    C.AddBuildExtensions MM : .mm : C.clang.C++ : $(SUFOBJ) "" : 1 0 1 : 1 ;
    C.AddBuildExtensions PCH : .h .pch : C.clang.PCH : "" .gch ;

    PCHCCFLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x c-header ;
    PCHC++FLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x c++-header ;
    PCHMFLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x objective-c-header ;
    PCHMMFLAGS on $(C.COMPILER_SUITE_SYMBOL) = -x objective-c++-header ;

    C.Flags * : CC  : -Wno-unused-parameter ;
    C.Flags * : C++ : -x c++ -Wno-unused-parameter ;
    C.Flags * : M   : -x objective-c -Wno-unused-parameter ;
    C.Flags * : MM  : -x objective-c++ -Wno-unused-parameter ;

    C.AR on $(C.COMPILER_SUITE_SYMBOL) = @(ar:R=$(COMPILER_BIN_PATH)) rU ;
    C.CC on $(C.COMPILER_SUITE_SYMBOL) = @(clang:R=$(COMPILER_BIN_PATH)) ;
    C.C++ on $(C.COMPILER_SUITE_SYMBOL) = @(clang:R=$(COMPILER_BIN_PATH)) ;
    C.LINK on $(C.COMPILER_SUITE_SYMBOL) = @(clang++:R=$(COMPILER_BIN_PATH)) ;
    C.RANLIB on $(C.COMPILER_SUITE_SYMBOL) = ;

    C._C++Exceptions on $(C.COMPILER_SUITE_SYMBOL) = C.clang._C++Exceptions ;
    C._C++Standard on $(C.COMPILER_SUITE_SYMBOL) = C.clang._C++Standard ;
    C._LinkPrebuiltLibraries on $(C.COMPILER_SUITE_SYMBOL) = C.clang._LinkPrebuiltLibraries ;
    C._MultiCppCompile_SetupFlags on $(C.COMPILER_SUITE_SYMBOL) = C.clang._MultiCppCompile_SetupFlags ;
    C._RuntimeTypeHelper on $(C.COMPILER_SUITE_SYMBOL) = C.clang._RuntimeTypeHelper ;
    C._SharedLibraryFromObjects_ExportLib on $(C.COMPILER_SUITE_SYMBOL) = C.clang._SharedLibraryFromObjects_ExportLib ;
    C._SharedLibraryFromObjects_LinkFlags on $(C.COMPILER_SUITE_SYMBOL) = C.clang._SharedLibraryFromObjects_LinkFlags ;

    SHAREDLIBDEFAULTFLAG on $(C.COMPILER_SUITE_SYMBOL) = -fPIC ;

    C.Toolchain.clang.Shared ;

    return $(C.COMPILER) ;
}

