rule C.win32.vc.AutoDetect COMPILER {
	local rc_nologo ;
	switch $(COMPILER) {
		case vs2012 :
			local key = HKEY_LOCAL_MACHINE SOFTWARE Microsoft "Windows Kits" "Installed Roots" KitsRoot ;
			MSSDK = [ W32_GETREG $(key) ] ;
			MSSDK ?= $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin/x86" ;
			MSSDK_STDHDRS = "$(MSVCNT)/include" "$(MSSDK)/include/shared" "$(MSSDK)/include/um" "$(MSSDK)/include/winrt" ;
			MSSDK_LINKDIRECTORIES = "$(MSVCNT)/lib" "$(MSSDK)/lib/win8/um/x86" ;
			rc_nologo = /nologo ;

		case vs2010 :
			local key = HKEY_LOCAL_MACHINE SOFTWARE Microsoft "Microsoft SDKs" Windows v7.0a InstallationFolder ;
			MSSDK = [ W32_GETREG $(key) ] ;
			MSSDK ?= $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin" ;
			MSSDK_STDHDRS = "$(MSVCNT)/include" "$(MSSDK)/Include" ;
			MSSDK_LINKDIRECTORIES = "$(MSVCNT)/lib" "$(MSSDK)/Lib" ;
			rc_nologo = /nologo ;

		case vs2008 :
			local key = HKEY_LOCAL_MACHINE SOFTWARE Microsoft "Microsoft SDKs" Windows CurrentInstallFolder ;
			MSSDK = [ W32_GETREG $(key) ] ;
			MSSDK ?= $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin" ;
			MSSDK_STDHDRS = "$(MSVCNT)/include" "$(MSSDK)/Include" ;
			MSSDK_LINKDIRECTORIES = "$(MSVCNT)/lib" "$(MSSDK)/Lib" ;

		case vs2005 :
			MSSDK = $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin" ;
			MSSDK_STDHDRS = "$(MSSDK)/include" "$(MSSDK)/PlatformSDK/Include" ;
			MSSDK_LINKDIRECTORIES = "$(MSVCNT)/lib" "$(MSVCNT)/PlatformSDK/lib" ;

		case vs2003 :
			MSSDK = $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin" ;
			MSSDK_STDHDRS = "$(MSSDK)/include" "$(MSSDK)/PlatformSDK/Include" ;
			MSSDK_LINKDIRECTORIES = "$(MSVCNT)/lib" "$(MSVCNT)/PlatformSDK/lib" ;

		case vs2002 :
			MSSDK = $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin" ;
			MSSDK_STDHDRS = "$(MSSDK)/include" "$(MSSDK)/PlatformSDK/Include" ;
			MSSDK_LINKDIRECTORIES = "$(MSVCNT)/lib" "$(MSVCNT)/PlatformSDK/lib" ;

		case vc6 :
			local key = HKEY_LOCAL_MACHINE SOFTWARE Microsoft MicrosoftSDK Directories "Install Dir" ;
			MSSDK = [ W32_GETREG $(key) ] ;
			MSSDK ?= $(MSVCNT) ;
			MSSDK_BINDIR = "$(MSSDK)/bin" ;
			MSSDK_STDHDRS = "$(MSSDK)/include" "$(MSVCNT)/Include" ;
			MSSDK_LINKDIRECTORIES = "$(MSSDK)/Lib" "$(MSVCNT)/Lib" ;
	}

	MSVCBIN							?= $(MSVCNT)/bin/ ;
	C.AR on $(C.COMPILER_SUITE_SYMBOL)		= $(MSVCBIN)lib ;
	C.CC on $(C.COMPILER_SUITE_SYMBOL)		= $(MSVCBIN)cl ;
	C.C++ on $(C.COMPILER_SUITE_SYMBOL)		= $(MSVCBIN)cl ;
	C.LINK on $(C.COMPILER_SUITE_SYMBOL)	= $(MSVCBIN)link ;
	C.MT on $(C.COMPILER_SUITE_SYMBOL)		= $(MSSDK_BINDIR)/mt ;
	if $(COMPILER) = vc6 {
		C.RC on $(C.COMPILER_SUITE_SYMBOL)	= $(MSVCNT)/../Common/MSDev98/Bin/rc ;
	} else {
		C.RC on $(C.COMPILER_SUITE_SYMBOL)	= $(MSSDK_BINDIR)/RC ;
	}
	C.RC_NOLOGO on $(C.COMPILER_SUITE_SYMBOL) = $(rc_nologo) ;
	C.STDHDRS on $(C.COMPILER_SUITE_SYMBOL)	= $(MSSDK_STDHDRS) ;
	C.STDLINKDIRECTORIES on $(C.COMPILER_SUITE_SYMBOL) = $(MSSDK_LINKDIRECTORIES) ;
}

VSPLATFORMMAP.win32 = Win32 ;
VSNATIVEPLATFORM.win32 = 1 ;
